@mixin theme_builder($theme-name, $theme-map) {
    // .theme-name selector
    .#{$theme-name} {
      background-color: map-deep-get($theme-map, "body", "bg");
      font-family: map-deep-get($theme-map, "body", "fontfamily");
      .container {
        *:not(h1):not(h2):not(h3) {
          font-size: 0.99em;
        }
      }
  
      .navbar {
        background: map-deep-get($theme-map, "themeColors", "light");
        height: 80px;
        display: flex;
        justify-content: space-between;
        padding: 0.5rem calc((100vw - 1200px) / 2);
        z-index: 10;
        position: relative;
        box-shadow: 0px 0px 6px black;
        &__title {
          color: map-deep-get($theme-map, "themeColors", "dark");
          cursor: pointer;
          text-decoration: none;
          font-size: 2rem;
          margin-left: 24px;
          @extend %align-items-center;
        }
  
        &__mobile--icon {
          opacity: 0;
  
          @include sm__devices {
            color: map-deep-get($theme-map, "themeColors", "dark");
            opacity: 1;
            position: absolute;
            top: 22px;
            right: 20px;
            font-size: 2rem;
          }
        }
  
        &__menu {
          @extend %align-items-center;
          list-style: none;
          text-align: center;
          margin-right: 24px;
  
          @include sm__devices {
            display: none;
          }
  
          &--links {
            color: map-deep-get($theme-map, "themeColors", "dark");
            @extend %align-items-center;
            justify-content: center;
            text-decoration: none;
            padding: 0 1rem;
            height: 100%;
            &:hover {
              color: map-deep-get($theme-map, "themeColors", "lime");
              transition: all 0.3s ease;
            }
          }
          &--links-indicator {
            position: absolute;
            width: 5px;
            height: 4px;
            border-radius: 5px;
            bottom: 15px;
            background-color: #0f2c78;
            transition: all 0.5s ease;
          }
        }
      }
  
      // Loop through each of the keys (sections)
      @each $section, $map in $theme-map {
        @if ($section == container) {
          .container {
            color: map-get($map, color);
            justify-content: space-between;
            padding: 1em;
            max-width: map-get($map, bp_md) * 1px;
            margin: 0 auto;
            &--fluid {
              margin: 0;
              max-width: 100%;
              justify-content: center;
            }
            &__row {
              display: flex;
              flex-wrap: wrap;
              width: 100%;
              &--childs-margin-0 > div[class*="container"] {
                margin: 0;
              }
              &-element {
                width: 150px;
                height: 30px;
                border: 2px
                  solid
                  map-deep-get($theme-map, "themeColors", "maincolor");
                margin: 10px;
                display: flex;
                align-items: center;
                justify-content: center;
              }
            }
            &__row--justify-center {
              justify-content: center;
            }
            &__row--justify-between {
              justify-content: space-between;
            }
            &__row--border {
              border: 1px
                solid
                map-deep-get($theme-map, "themeColors", "maincolor");
            }
            @for $i from 1 through 10 {
              &__row--gap-#{$i} {
                gap: ($i) * 1px;
              }
              &__row--margin-#{$i} {
                margin: ($i * 2) * 1px 0;
              }
            }
            &__col-marin-0 {
              margin: 0 !important;
            }
            &__col--align-vertical {
              display: flex;
              flex-direction: column;
              justify-content: center;
              align-items: flex-start;
            }
            @for $i from 0 through 2 {
              &__col-shrink-#{$i} {
                flex-shrink: $i;
              }
            }
            @for $i from 1 through $grid__cols {
              &__col-#{$i} {
                flex-basis: (100 / ($grid__cols / $i)) * 1%;
              }
              &__col-offset-#{$i} {
                margin: (100 / ($grid__cols / $i)) * 1px !important;
              }
              &__col-offset-r-#{$i} {
                margin-right: (100 / ($grid__cols / $i)) * 1% !important;
              }
              &__col-offset-l-#{$i} {
                margin-left: (100 / ($grid__cols / $i)) * 1% !important;
              }
            }
  
            @include sm__devices {
              @for $i from 1 through $grid__cols {
                &__col-sm-#{$i} {
                  flex-basis: (100 / ($grid__cols / $i)) * 1%;
                }
              }
              &__col--sm-hidden {
                display: none !important;
              }
            }
          }
        }
        @if ($section == boxes) {
          .box {
            flex-direction: column;
            text-align: center;
            max-width: 400px;
            margin: 10px 40px;
            height: 300px;
            border: 1px solid black;
            border-radius: 10px;
            transition: all 0.2s ease-in;
            @each $style, $box in $map {
              &--#{$style} {
                background-color: map-get($box, bg);
              }
              &--#{$style} h2 {
                font-size: map-get($box, h2-size);
                margin: 1.5rem;
                color: map-get($box, h2-color);
              }
              &--#{$style} hr {
                display: block;
                border: none;
                height: 3px;
                background-color: map-get($box, hr-color);
              }
              &--#{$style} p {
                font-size: map-get($box, p-size) !important;
                padding: 2rem;
                color: map-get($box, p-color);
              }
              &--#{$style}:hover {
                transform: map-get($box, hover-transform);
              }
            }
          }
        } @else if ($section == buttons) {
          // buttons Themes
          .button {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            padding: 10px 15px;
            border: 1px solid;
            outline: none;
            transition: all 0.5s ease;
            @each $state, $button in $map {
              &--state-#{$state} {
                @if ($state == "danger") {
                  &:after {
                    content: "x";
                    position: absolute;
                    right: 13px;
                    opacity: 0;
                    transition: 0.5s;
                  }
                  &:hover:after {
                    opacity: 1;
                    right: 8px;
                  }
                  &:hover {
                    padding-right: 20px;
                  }
                }
                color: map-get($button, color);
                background: map-get($button, bg);
                border: map-get($button, br);
                border-radius: map-get($button, br-radius);
                box-shadow: map-get($button, bx-shadow);
                &:hover {
                  background: map-get($button, hover-bg-color);
                }
                &:active {
                  box-shadow: map-get($button, hover-bx-shadow);
                  transform: map-get($button, transform);
                }
              }
            }
            &--round {
              width: 50px;
              height: 50px;
              border-radius: 50%;
            }
            &:hover {
              cursor: pointer;
              transition: all 0.3s ease;
            }
          }
        } @else {
          .#{$section} {
            background-color: map-get($map, bg);
            color: map-get($map, color);
  
            @if ($section != button) {
              height: map-get($map, height);
              width: map-get($map, width);
            } @else {
              &:hover {
                background-color: lighten(map-get($map, bg), 20%);
              }
            }
          }
        }
      }
    }
  }